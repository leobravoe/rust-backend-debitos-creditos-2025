# ======================================================================
#         Cargo.toml — O "Arquiteto" do Projeto Rust (Otimizado)
# ======================================================================
# Otimizações:
# - Removidas dependências de logging (tracing, tracing-subscriber).
# - Removida dependência 'thiserror' (anyhow é suficiente aqui).
# - Reduzidas as features do Tokio para incluir apenas o necessário.
# - Mantido jemallocator para eficiência de memória.
# - Mantido perfil de release agressivo.
# ======================================================================

# ----------------------------------------------------------------------
# [package] — A "CARTEIRA DE IDENTIDADE" DO SEU PROJEITO
# ----------------------------------------------------------------------
[package]
name = "rust_api"
version = "0.1.0"
edition = "2024" # Mantida a edição mais recente

# ----------------------------------------------------------------------
# [dependencies] — A "LISTA DE COMPRAS" DE FERRAMENTAS OTIMIZADA
# ----------------------------------------------------------------------
[dependencies]

axum = "0.8.6" # Framework web

# OTIMIZAÇÃO: Tokio com features mínimas necessárias
tokio = { version = "1.48.0", features = [
    "rt-multi-thread", # Essencial para servidores web concorrentes
    "macros",          # Necessário para #[tokio::main]
    "net",             # Necessário para TcpListener (usado por Axum)
    "time",            # Necessário para tokio::time::sleep (loop de retentativa)
    "sync",            # Frequentemente necessário por bibliotecas como sqlx/axum internamente
] }

serde = { version = "1.0.228", features = ["derive"] } # Serialização/Deserialização
serde_json = "1.0.145" # Suporte específico para JSON

# SQLx mantido como estava (funcional)
sqlx = { version = "0.8.6", features = ["runtime-tokio-rustls", "postgres", "macros", "json"] }

anyhow = "1.0.100" # Tratamento de erro simplificado (para main)

# ----------------------------------------------------------------------
# [profile.release] — OTIMIZAÇÕES DE PRODUÇÃO (Mantidas)
# ----------------------------------------------------------------------
[profile.release]
opt-level = 3        # Otimização máxima de velocidade
lto = true           # Link-Time Optimization (melhor performance, compilação mais lenta)
codegen-units = 1    # Melhor otimização global (compilação mais lenta)
debug = false        # Remove símbolos de debug (binário menor)
strip = true         # Remove símbolos não utilizados (binário ainda menor) - Adicionado
panic = 'abort'      # Aborta em pânico em vez de desenrolar a pilha (binário menor, pode ser marginalmente mais rápido) - Adicionado